/**
 * mixin for media queries
 * taken from https://gist.github.com/1215856#file-6_media_queries-scss
 */
@mixin respond_to($media) {
 	@if $media == handhelds {
		@media only screen and (max-width: 479px) { @content }
	}
	@else if $media == wide_handhelds {
		@media only screen and (max-width: 767px) { @content }
	}
	@else if $media == tablets {
		@media only screen and (max-width: 959px) { @content }
	}
	@else if $media == wide_tablets {
		@media only screen and (max-width: 1025px) { @content }
	}
}

/* global variables */
$grid_pad: 2em;

$max_width: 1140px;
$min_width: 755px;

$logo_blue: #1873ba;

/** grid **/
/* based off of http://css-tricks.com/dont-overthink-it-grids/ */
.grid {
	padding: $grid_pad $grid_pad 0 $grid_pad;
	max-width: $max_width;
	min-width: $min_width;
	margin: 0 auto 0 auto;

	&:after {
		content: "";
		display: table;
		clear: both;
	}

	@include respond_to(wide_handhelds) { width: 100%; min-width: 0; }
}
.col, [class*='col-'] {
	float: left;
	padding-left: $grid_pad;
	.grid &:first-child {
		padding-left: 0;
	}
	@include respond_to(wide_handhelds) { padding: 0; }
}

/* some default columns */
.col { width: 100%; }
.col-2-3 { width: 66.66%; }
.col-1-3 { width: 33.33%; }
.col-1-2 { width: 50%; }
.col-1-4 { width: 25%; }
.col-1-8 { width: 12.5%; }
.col-3-4 { width: 75%; }

/* note: this has be here instead of inside the class above because otherwise the cols will override the width */
@include respond_to(wide_handhelds) {
	[class*='col-'] { float: none; width: auto; }
}

/* a default module setup for demo purposes */
.module {
	padding: $grid_pad;
}

body { font-family: "Lucida Sans", Arial, sans-serif; font-size: 0.8em;
  // fake animation for Android
  // from http://timpietrusky.com/advanced-checkbox-hack
  -webkit-animation: bugfix infinite 1s; 
}
@-webkit-keyframes bugfix { 
  from {padding:0;} 
  to {padding:0;} 
}

.clearfix:after {
	visibility: hidden;
	display: block;
	font-size: 0;
	content: " ";
	clear: both;
	height: 0;
}

nav ul { list-style: none; padding-left: 0; }


/**********************************/
/**** start of the actual code ****/
/**********************************/
header {
	nav {
		clear: both; background: #000; @include background-image(linear-gradient(#424242, #000000)); @include border-radius(7px);
		.regular_nav {
			height: auto;
			li {
				float: left;
				@include respond_to(wide_handhelds) {
					float: none;
				}
			}
			@include respond_to(wide_handhelds) {
				padding: 0 0 0 1em;
				margin-top: 0;
				height: 0;
				overflow: hidden;
				@include transition(all 600ms ease-in-out);
			}
			@include respond_to(handhelds) {
				padding-left: 1.4em;
			}
		}
		a {
			display: block; padding: 1em 2em; color: #fff; text-decoration: none;
			@include respond_to(wide_handhelds) {
				font-size: 1.1em; padding: 0.5em 1em;
			}
		}

		// always hide the checkbox that controls the display of the regular nav when in mobile
		.mobile_nav_trigger {
			position: absolute; top: -9999px; left: -9999px;
			@include respond_to(wide_handhelds) {
				// when the mobile nav checkbox is checked, the set the height on the regular nav
				&:checked ~ .regular_nav { height: 16em; }
			}
		}
		// the mobile nav: hidden by default
		.mobile_nav {
			display: none; margin-bottom: 0;
			// show the mobile nav on the smallest handhelds
			@include respond_to(wide_handhelds) {
				display: block;
			}
			// instead of a link for the menu, we use a label which checks the mobile nav checkbox
			label { display: block; padding: 0.7em 1.1em; color: #fff; }
		}
	}
}